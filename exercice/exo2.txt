1. Créez un dossier "dashboard".
    mkdir dashboard

2. Initalisez un dépôt git.
    git init

3. Créez un index.html avec un doctype et un h1 de votre choix.
    <h1>Dashboard</h1>

4. Créez un commit pour sauvegarder ces changements.
    git add index.html
    git commit -m "Add index.html"

5. Créez une branche "api".
    git branch api

6. Switcher sur cette branche et créez un fichier app.js.
    git switch api
    touch app.js

7. Écrivez une fonction :
    function foo(name){
    console.log("Bienvenue", name)
    }

8. Faites un commit de ces changements.
    git add app.js
    git commit -m "Add app.js"

9. Retournez sur la branche principale.
    git switch main

10. Modifier le h1.
    <h1>Dashboard modifié</h1>

11. Mettre à jour le dernier commit avec les nouvelles modifications.
    git add index.html
    git commit --amend -m "Add index.html"

12. Fusionner la branche main avec la branche api.
    git rebase api
    Le rebase est une opération qui permet de déplacer les commits d'une branche sur une autre. 
    Cela permet de garder un historique linéaire.

13. Retournez sur la branche api et modifiez le h1.
    git switch api
    <h1>Dashboard API</h1>

14. Faites un commit de ces changements.
    git add index.html
    git commit -m "Add index.html"

15. Retournez sur la branche principale.
    git switch main

16. Fusionner la branche api avec la branche principale.
    git merge api

17. Supprimez la branche api.
    git branch -d api
